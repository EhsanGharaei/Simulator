{
    "project": {},
    "files": {
        "config/helpers.js": {
            "name": "config/helpers.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "public/js/simcirjs/simcir-basicset.js": {
            "name": "public/js/simcirjs/simcir-basicset.js",
            "modules": {},
            "classes": {
                "simcir-basicSet": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "public/js/simcirjs/simcir-custom.js": {
            "name": "public/js/simcirjs/simcir-custom.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "public/js/simcirjs/simcir.js": {
            "name": "public/js/simcirjs/simcir.js",
            "modules": {},
            "classes": {
                "simcir": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "karma.conf.js": {
            "name": "karma.conf.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "webpack.config.js": {
            "name": "webpack.config.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        }
    },
    "modules": {},
    "classes": {
        "simcir-basicSet": {
            "name": "simcir-basicSet",
            "shortname": "simcir-basicSet",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "public/js/simcirjs/simcir-basicset.js",
            "line": 12,
            "description": "Base function of SimcirJS"
        },
        "simcir": {
            "name": "simcir",
            "shortname": "simcir",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "public/js/simcirjs/simcir.js",
            "line": 15,
            "description": "Base function of SimcirJS"
        }
    },
    "elements": {},
    "classitems": [
        {
            "file": "config/helpers.js",
            "line": 1,
            "description": "Created by ehsangharaei on 13/10/2016.",
            "class": "simcir-basicSet"
        },
        {
            "file": "public/js/simcirjs/simcir-custom.js",
            "line": 1,
            "description": "Created by ehsangharaei on 02/11/2016.",
            "class": "simcir"
        },
        {
            "file": "public/js/simcirjs/simcir.js",
            "line": 24,
            "description": "It creates SVG element.\nInput: tagNeme",
            "itemtype": "method",
            "name": "createSVGElement",
            "return": {
                "description": "Returns $(document.createElementNS())",
                "type": "Function"
            },
            "class": "simcir"
        },
        {
            "file": "public/js/simcirjs/simcir.js",
            "line": 35,
            "description": "It creates SVG.\nInput: w,h",
            "itemtype": "method",
            "name": "createSVG",
            "return": {
                "description": "Returns createSVGElement('svg').attr({})",
                "type": "Function"
            },
            "class": "simcir"
        },
        {
            "file": "public/js/simcirjs/simcir.js",
            "line": 49,
            "description": "It creates some functions for drawing.\nInput: $target",
            "itemtype": "method",
            "name": "graphics",
            "return": {
                "description": "Returns attr,moveTo,lineTo,curveTo,closePath,drawRect,drawCircle",
                "type": "Function"
            },
            "class": "simcir"
        },
        {
            "file": "public/js/simcirjs/simcir.js",
            "line": 58,
            "description": "It move pointer of starting drowing element.\nInput: x, y",
            "itemtype": "method",
            "name": "moveTo",
            "return": {
                "description": "-"
            },
            "class": "simcir"
        },
        {
            "file": "public/js/simcirjs/simcir.js",
            "line": 68,
            "description": "It draw a line\nInput: x, y",
            "itemtype": "method",
            "name": "lineTo",
            "return": {
                "description": "-"
            },
            "class": "simcir"
        },
        {
            "file": "public/js/simcirjs/simcir.js",
            "line": 78,
            "description": "It draw a curve\nInput: x1, y1, x, y",
            "itemtype": "method",
            "name": "curveTo",
            "return": {
                "description": "-"
            },
            "class": "simcir"
        },
        {
            "file": "public/js/simcirjs/simcir.js",
            "line": 88,
            "description": "It close path in a drawing\nInput: boolean close",
            "itemtype": "method",
            "name": "closePath",
            "return": {
                "description": "-"
            },
            "class": "simcir"
        },
        {
            "file": "public/js/simcirjs/simcir.js",
            "line": 104,
            "description": "It draws rectangular\nInput: x, y, width, height",
            "itemtype": "method",
            "name": "drawRect",
            "return": {
                "description": "-"
            },
            "class": "simcir"
        },
        {
            "file": "public/js/simcirjs/simcir.js",
            "line": 115,
            "description": "It draws circle\nInput: x, y, r",
            "itemtype": "method",
            "name": "drawCircle",
            "return": {
                "description": "-"
            },
            "class": "simcir"
        },
        {
            "file": "public/js/simcirjs/simcir.js",
            "line": 136,
            "description": "split class names.\nInput: $o,f",
            "itemtype": "method",
            "name": "eachClass",
            "return": {
                "description": "Returns callback on each classnames of an attribute",
                "type": "Function"
            },
            "class": "simcir"
        },
        {
            "file": "public/js/simcirjs/simcir.js",
            "line": 148,
            "description": "add or remove class.\nInput: $o,className, remove",
            "itemtype": "method",
            "name": "addClass",
            "return": {
                "description": "Returns $o",
                "type": "Function"
            },
            "class": "simcir"
        },
        {
            "file": "public/js/simcirjs/simcir.js",
            "line": 169,
            "description": "remove class.\nInput: $o,classNeme",
            "itemtype": "method",
            "name": "removeClass",
            "return": {
                "description": "Returns addClass with remove true to remove a class",
                "type": "Function"
            },
            "class": "simcir"
        },
        {
            "file": "public/js/simcirjs/simcir.js",
            "line": 178,
            "description": "search to find if it has the className.\nInput: $o,className",
            "itemtype": "method",
            "name": "hasClass",
            "return": {
                "description": "Returns true or false",
                "type": "Boolean"
            },
            "class": "simcir"
        },
        {
            "file": "public/js/simcirjs/simcir.js",
            "line": 193,
            "description": "move or rotate attribute.\nInput: -",
            "itemtype": "method",
            "name": "transform",
            "return": {
                "description": "Returns x,y,rotate",
                "type": "Variables"
            },
            "class": "simcir"
        },
        {
            "file": "public/js/simcirjs/simcir.js",
            "line": 203,
            "description": "-\nInput: $o, k",
            "itemtype": "method",
            "name": "num",
            "return": {
                "description": "v? +v : 0",
                "type": "Integer"
            },
            "class": "simcir"
        },
        {
            "file": "public/js/simcirjs/simcir.js",
            "line": 230,
            "description": "offset an element.\nInput: $o",
            "itemtype": "method",
            "name": "offset",
            "return": {
                "description": "Returns x,y",
                "type": "Variables"
            },
            "class": "simcir"
        },
        {
            "file": "public/js/simcirjs/simcir.js",
            "line": 247,
            "description": "set \"pointer-events\" css class value to \"visiblePainted\" if enable else 'none'.\nInput: $o,enable",
            "itemtype": "method",
            "name": "enableEvents",
            "return": {
                "description": "-"
            },
            "class": "simcir"
        },
        {
            "file": "public/js/simcirjs/simcir.js",
            "line": 256,
            "description": "set css '-webkit-user-select' value to 'none'.\nInput: $o",
            "itemtype": "method",
            "name": "disableSelection",
            "return": {
                "description": "-"
            },
            "class": "simcir"
        },
        {
            "file": "public/js/simcirjs/simcir.js",
            "line": 267,
            "description": "???????????\nInput: -",
            "itemtype": "method",
            "name": "controller",
            "return": {
                "description": "????",
                "type": "Function"
            },
            "class": "simcir"
        },
        {
            "file": "public/js/simcirjs/simcir.js",
            "line": 283,
            "description": "events handler.\nInput: -",
            "itemtype": "method",
            "name": "eventQueue",
            "return": {
                "description": "postEvent",
                "type": "Function"
            },
            "class": "simcir"
        },
        {
            "file": "public/js/simcirjs/simcir.js",
            "line": 293,
            "description": "add event to events queue.\nInput: event",
            "itemtype": "method",
            "name": "postEvent",
            "return": {
                "description": "-"
            },
            "class": "simcir"
        },
        {
            "file": "public/js/simcirjs/simcir.js",
            "line": 305,
            "description": "dispatch event.\nInput: -",
            "itemtype": "method",
            "name": "dispatchEvent",
            "return": {
                "description": "-"
            },
            "class": "simcir"
        },
        {
            "file": "public/js/simcirjs/simcir.js",
            "line": 319,
            "description": "get current time.\nInput: -",
            "itemtype": "method",
            "name": "getTime",
            "return": {
                "description": "current time",
                "type": "Date"
            },
            "class": "simcir"
        },
        {
            "file": "public/js/simcirjs/simcir.js",
            "line": 328,
            "description": "check events timing if it is expired remove from queue.\nInput: -",
            "itemtype": "method",
            "name": "timerHandler",
            "return": {
                "description": "-"
            },
            "class": "simcir"
        },
        {
            "file": "public/js/simcirjs/simcir.js",
            "line": 347,
            "params": [
                {
                    "name": "unit\nit",
                    "description": "is set to 16",
                    "type": "Integer"
                }
            ],
            "class": "simcir"
        },
        {
            "file": "public/js/simcirjs/simcir.js",
            "line": 353,
            "params": [
                {
                    "name": "fontSize\nit",
                    "description": "is set to 12",
                    "type": "Integer"
                }
            ],
            "class": "simcir"
        },
        {
            "file": "public/js/simcirjs/simcir.js",
            "line": 359,
            "description": "create text label.\nInput: text",
            "itemtype": "method",
            "name": "createLabel",
            "return": {
                "description": "Returns createSVGElement to make an text element.",
                "type": "Function"
            },
            "class": "simcir"
        },
        {
            "file": "public/js/simcirjs/simcir.js",
            "line": 370,
            "description": "creates node and its controller, input, output.\nInput: type,label,description, headless",
            "itemtype": "method",
            "name": "createNode",
            "return": {
                "description": "Returns $node",
                "type": "Element"
            },
            "class": "simcir"
        },
        {
            "file": "public/js/simcirjs/simcir.js",
            "line": 394,
            "description": "checks if the node is active or not.\nInput: $o",
            "itemtype": "method",
            "name": "isActiveNode",
            "return": {
                "description": "Returns true or false",
                "type": "Boolean"
            },
            "class": "simcir"
        },
        {
            "file": "public/js/simcirjs/simcir.js",
            "line": 404,
            "description": "controls everything about a node, setvalue, post event, get value, append label,\nadd class, remove class, handel inputs and outputs.\nInput: -",
            "itemtype": "method",
            "name": "createNodeController",
            "return": {
                "description": "$.extend() node with setValue, getValue",
                "type": "Function"
            },
            "class": "simcir"
        },
        {
            "file": "public/js/simcirjs/simcir.js",
            "line": 413,
            "description": "set node value and post its event.\nInput: value, force",
            "itemtype": "method",
            "name": "setValue",
            "return": {
                "description": "-"
            },
            "class": "simcir"
        },
        {
            "file": "public/js/simcirjs/simcir.js",
            "line": 426,
            "description": "set node value.\nInput: value, force",
            "itemtype": "method",
            "name": "getValue",
            "return": {
                "description": "value",
                "type": "Value"
            },
            "class": "simcir"
        },
        {
            "file": "public/js/simcirjs/simcir.js",
            "line": 459,
            "description": "set node label.\nInput: text, align",
            "itemtype": "method",
            "name": "appendLabel",
            "return": {
                "description": "-"
            },
            "class": "simcir"
        },
        {
            "file": "public/js/simcirjs/simcir.js",
            "line": 508,
            "description": "extend node with setoutput and getoutput.\nInput: node",
            "itemtype": "method",
            "name": "createInputNodeController",
            "return": {
                "description": "$.extend(node, {setOutput,getOutput});",
                "type": "Function"
            },
            "class": "simcir"
        },
        {
            "file": "public/js/simcirjs/simcir.js",
            "line": 519,
            "description": "get output.\nInput: -",
            "itemtype": "method",
            "name": "getOutput",
            "return": {
                "description": "output;",
                "type": "Output"
            },
            "class": "simcir"
        },
        {
            "file": "public/js/simcirjs/simcir.js",
            "line": 533,
            "description": "extend node with setValue, getInputs, connectTo, disconnectFrom.\nInput: node",
            "itemtype": "method",
            "name": "createOutputNodeController",
            "return": {
                "description": "$.extend(node, {setValue, getInputs, connectTo, disconnectFrom});",
                "type": "Function"
            },
            "class": "simcir"
        },
        {
            "file": "public/js/simcirjs/simcir.js",
            "line": 542,
            "description": "set value of input node.\nInput: value",
            "itemtype": "method",
            "name": "setValue",
            "return": {
                "description": "-"
            },
            "class": "simcir"
        },
        {
            "file": "public/js/simcirjs/simcir.js",
            "line": 554,
            "description": "connect 2 nodes.\nInput: inNode",
            "itemtype": "method",
            "name": "connectTo",
            "return": {
                "description": "-"
            },
            "class": "simcir"
        },
        {
            "file": "public/js/simcirjs/simcir.js",
            "line": 568,
            "description": "disconnect 2 nodes.\nInput: inNode",
            "itemtype": "method",
            "name": "disconnectFrom",
            "return": {
                "description": "-"
            },
            "class": "simcir"
        },
        {
            "file": "public/js/simcirjs/simcir.js",
            "line": 584,
            "description": "get inputs.\nInput: -",
            "itemtype": "method",
            "name": "getInputs",
            "return": {
                "description": "input",
                "type": "Input"
            },
            "class": "simcir"
        },
        {
            "file": "public/js/simcirjs/simcir.js",
            "line": 600,
            "description": "creates device, add device controller.\nInput: deviceDef, headless",
            "itemtype": "method",
            "name": "createDevice",
            "return": {
                "description": "$dev",
                "type": "Element"
            },
            "class": "simcir"
        },
        {
            "file": "public/js/simcirjs/simcir.js",
            "line": 624,
            "description": "creates device controller.\nInput: device",
            "itemtype": "method",
            "name": "createDeviceController",
            "return": {
                "description": "$.extend(device, {addInput,addOutput,getInputs,getOutputs,disconnectAll,setSelected,\n     isSelected,getLabel,false,getSize,createUI,layoutUI});",
                "type": "Function"
            },
            "class": "simcir"
        },
        {
            "file": "public/js/simcirjs/simcir.js",
            "line": 636,
            "description": "add input node to a device.\nInput: label, description,numOfInput,currentInput",
            "itemtype": "method",
            "name": "addInput",
            "return": {
                "description": "node",
                "type": "Node"
            },
            "class": "simcir"
        },
        {
            "file": "public/js/simcirjs/simcir.js",
            "line": 655,
            "description": "add output node to a device.\nInput: label, description",
            "itemtype": "method",
            "name": "addOutput",
            "return": {
                "description": "node",
                "type": "Node"
            },
            "class": "simcir"
        },
        {
            "file": "public/js/simcirjs/simcir.js",
            "line": 670,
            "description": "get inputs of a device.\nInput: -",
            "itemtype": "method",
            "name": "getInputs",
            "return": {
                "description": "inputs",
                "type": "Array of node"
            },
            "class": "simcir"
        },
        {
            "file": "public/js/simcirjs/simcir.js",
            "line": 679,
            "description": "get outputs of a device.\nInput: -",
            "itemtype": "method",
            "name": "getInputs",
            "return": {
                "description": "outputs",
                "type": "Array of node"
            },
            "class": "simcir"
        },
        {
            "file": "public/js/simcirjs/simcir.js",
            "line": 688,
            "description": "disconnect all ofthe inputs and outputs of a device.\nInput: -",
            "itemtype": "method",
            "name": "disconnectAll",
            "return": {
                "description": "-"
            },
            "class": "simcir"
        },
        {
            "file": "public/js/simcirjs/simcir.js",
            "line": 709,
            "description": "set selected class for a device.\nInput: value",
            "itemtype": "method",
            "name": "setSelected",
            "return": {
                "description": "-"
            },
            "class": "simcir"
        },
        {
            "file": "public/js/simcirjs/simcir.js",
            "line": 719,
            "description": "check if device is selected or not.\nInput: -",
            "itemtype": "method",
            "name": "isSelected",
            "return": {
                "description": "selected",
                "type": "Boolean"
            },
            "class": "simcir"
        },
        {
            "file": "public/js/simcirjs/simcir.js",
            "line": 734,
            "description": "set label for a device.\nInput: value",
            "itemtype": "method",
            "name": "setLabel",
            "return": {
                "description": "-"
            },
            "class": "simcir"
        },
        {
            "file": "public/js/simcirjs/simcir.js",
            "line": 745,
            "description": "get label of a device.\nInput: -",
            "itemtype": "method",
            "name": "getLabel",
            "return": {
                "description": "label",
                "type": "String"
            },
            "class": "simcir"
        },
        {
            "file": "public/js/simcirjs/simcir.js",
            "line": 754,
            "description": "get size of the device.\nInput: -",
            "itemtype": "method",
            "name": "getSize",
            "return": {
                "description": "width, height",
                "type": "Object"
            },
            "class": "simcir"
        },
        {
            "file": "public/js/simcirjs/simcir.js",
            "line": 767,
            "description": "manage Layout UI of a device.\nInput: -",
            "itemtype": "method",
            "name": "layoutUI",
            "return": {
                "description": "-"
            },
            "class": "simcir"
        },
        {
            "file": "public/js/simcirjs/simcir.js",
            "line": 784,
            "description": "manage Layout UI of nodes of a device.\nInput: nodes, x , type",
            "itemtype": "method",
            "name": "layoutNodes",
            "return": {
                "description": "-"
            },
            "class": "simcir"
        },
        {
            "file": "public/js/simcirjs/simcir.js",
            "line": 830,
            "description": "creates UI of a device and manage it.\nInput: -",
            "itemtype": "method",
            "name": "createUI",
            "return": {
                "description": "-"
            },
            "class": "simcir"
        },
        {
            "file": "public/js/simcirjs/simcir.js",
            "line": 878,
            "description": "handles double click on label\nInput: -",
            "itemtype": "method",
            "name": "label_dblClickHandler",
            "return": {
                "description": "-"
            },
            "class": "simcir"
        },
        {
            "file": "public/js/simcirjs/simcir.js",
            "line": 936,
            "description": "creates connector.\nInput: x1, y1, x2, y2",
            "itemtype": "method",
            "name": "createConnector",
            "return": {
                "description": "createSVGElement('path')",
                "type": "Function"
            },
            "class": "simcir"
        },
        {
            "file": "public/js/simcirjs/simcir.js",
            "line": 947,
            "description": "creates connector.\nInput: x1, y1, x2, y2",
            "itemtype": "method",
            "name": "connect",
            "return": {
                "description": "-"
            },
            "class": "simcir"
        },
        {
            "file": "public/js/simcirjs/simcir.js",
            "line": 962,
            "description": "creates device element.\nInput: data, headless",
            "itemtype": "method",
            "name": "buildCircuit",
            "return": {
                "description": "$devices",
                "type": "Element"
            },
            "class": "simcir"
        },
        {
            "file": "public/js/simcirjs/simcir.js",
            "line": 997,
            "description": "creates dialog.\nInput: title, $content",
            "itemtype": "method",
            "name": "showDialog",
            "return": {
                "description": "$dlg",
                "type": "Element"
            },
            "class": "simcir"
        },
        {
            "file": "public/js/simcirjs/simcir.js",
            "line": 1076,
            "description": "Input: data",
            "itemtype": "method",
            "name": "createDeviceRefFactory",
            "return": {
                "description": "",
                "type": "Function"
            },
            "class": "simcir"
        },
        {
            "file": "public/js/simcirjs/simcir.js",
            "line": 1149,
            "params": [
                {
                    "name": "factories",
                    "description": "",
                    "type": "Object"
                }
            ],
            "class": "simcir"
        },
        {
            "file": "public/js/simcirjs/simcir.js",
            "line": 1155,
            "params": [
                {
                    "name": "defaultToolbox",
                    "description": "",
                    "type": "Array"
                }
            ],
            "class": "simcir"
        },
        {
            "file": "public/js/simcirjs/simcir.js",
            "line": 1161,
            "description": "Add device in toolbox and create device factory forthat device.\nInput: type, factory",
            "itemtype": "method",
            "name": "registerDevice",
            "return": {
                "description": "-"
            },
            "class": "simcir"
        },
        {
            "file": "public/js/simcirjs/simcir.js",
            "line": 1175,
            "description": "Create scroll bar and controls all of its actions.\nInput: -",
            "itemtype": "method",
            "name": "createScrollbar",
            "return": {
                "description": "$scrollbar",
                "type": "Element"
            },
            "class": "simcir"
        },
        {
            "file": "public/js/simcirjs/simcir.js",
            "line": 1292,
            "description": "Generates unigue id.\nInput: -",
            "itemtype": "method",
            "name": "getUniqueId",
            "return": {
                "description": "simcir-id-generated id",
                "type": "String"
            },
            "class": "simcir"
        },
        {
            "file": "public/js/simcirjs/simcir.js",
            "line": 1304,
            "description": "Create the whole work spaces and handle everything happens inside.\nInput: data",
            "itemtype": "method",
            "name": "createWorkspace",
            "return": {
                "description": "$workspace",
                "type": "Element"
            },
            "class": "simcir"
        },
        {
            "file": "public/js/simcirjs/simcir.js",
            "line": 1763,
            "description": "setup simulator and workspace and handles switching between json view and circuit view.\nInput: $placeHolder, data",
            "itemtype": "method",
            "name": "setupSimcir",
            "return": {
                "description": "$placeHolder",
                "type": "Element"
            },
            "class": "simcir"
        },
        {
            "file": "public/js/simcirjs/simcir.js",
            "line": 1798,
            "description": "Make HTML view based on JSON data for doc view.\nInput: $placeHolder",
            "itemtype": "method",
            "name": "setupSimcirDoc",
            "return": {
                "description": "-"
            },
            "class": "simcir"
        },
        {
            "file": "karma.conf.js",
            "line": 1,
            "description": "Created by ehsangharaei on 13/10/2016.",
            "class": ""
        },
        {
            "file": "webpack.config.js",
            "line": 1,
            "description": "Created by ehsangharaei on 13/10/2016.",
            "class": ""
        }
    ],
    "warnings": [
        {
            "message": "Missing item type\nCreated by ehsangharaei on 13/10/2016.",
            "line": " config/helpers.js:1"
        },
        {
            "message": "Missing item type\nCreated by ehsangharaei on 02/11/2016.",
            "line": " public/js/simcirjs/simcir-custom.js:1"
        },
        {
            "message": "Missing item type",
            "line": " public/js/simcirjs/simcir.js:347"
        },
        {
            "message": "Missing item type",
            "line": " public/js/simcirjs/simcir.js:353"
        },
        {
            "message": "Missing item type",
            "line": " public/js/simcirjs/simcir.js:1149"
        },
        {
            "message": "Missing item type",
            "line": " public/js/simcirjs/simcir.js:1155"
        },
        {
            "message": "Missing item type\nCreated by ehsangharaei on 13/10/2016.",
            "line": " karma.conf.js:1"
        },
        {
            "message": "Missing item type\nCreated by ehsangharaei on 13/10/2016.",
            "line": " webpack.config.js:1"
        }
    ]
}